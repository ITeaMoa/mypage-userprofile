plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.iteamoa'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	// runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	implementation platform('software.amazon.awssdk:bom:2.29.30')
	implementation 'software.amazon.awssdk:s3'

	implementation 'software.amazon.awssdk:dynamodb'
	implementation 'software.amazon.awssdk:dynamodb-enhanced'


    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters']
}


sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'
        }
    }
}

tasks.withType(ProcessResources) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters']
}